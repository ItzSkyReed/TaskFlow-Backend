events {}

http {
    limit_req_zone $binary_remote_addr zone=standard_limit:20m rate=1000r/m;

    # Зона для «тяжёлых» эндпоинтов
    limit_req_zone $binary_remote_addr zone=heavy_limit:20m rate=100r/m;

    upstream task_flow {
        server web:8000;
    }

    upstream minio_api {
        server minio:9000; # port - MINIO_STORAGE_PORT в .env
    }

    server {
        listen 80;

        # MinIO (под /task_flow/cdn/)
        location /task_flow/cdn/ { #
            # Убираем /task_flow/cdn/ перед проксированием
            rewrite ^/task_flow/cdn/(.*)$ /$1 break;
            proxy_pass http://minio_api/;
            proxy_set_header Host $host;
            proxy_intercept_errors on;
            error_page 404 = /errors/cdn/404.json;
            error_page 503 = /errors/429.json;
        }

        # FastAPI (под /task_flow/)
        location /task_flow/ {
            proxy_pass http://task_flow/;  # ROOT_PATH у FastAPI = /task_flow
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 10m;
            limit_req zone=standard_limit burst=20 nodelay;
            error_page 503 = /errors/429.json;
        }
        # Для ошибок которые нельзя настроить, например в minio
        location /errors/ {
            internal;  # доступно только из nginx, не снаружи
            default_type application/json;
            add_header Content-Type "application/json; charset=utf-8";
            root /etc/nginx;  # корень для поиска файлов
        }
    }
}