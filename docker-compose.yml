services:
  postgres:
    image: postgres:17.5-alpine3.22
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_OUT_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - taskflow_net

  redis:
    image: redis:8.0.3-alpine
    container_name: redis
    restart: unless-stopped
    env_file:
      - .env
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    ports:
      - "${REDIS_OUT_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - taskflow_net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    ports:
      - "${MINIO_OUT_WEB_PORT}:${MINIO_WEB_PORT}"
    expose:
      - "${MINIO_STORAGE_PORT}"  # expose — только для внутренней сети Docker, не наружу
    volumes:
      - minio_data:/data
    env_file:
      - .env
    command: server /data --console-address ":${MINIO_WEB_PORT}" --address ":${MINIO_STORAGE_PORT}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${MINIO_WEB_PORT}/minio/health/live" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - taskflow_net

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./init-minio.sh:/init-minio.sh:ro
    entrypoint: [ "/bin/sh", "/init-minio.sh" ]
    networks:
      - taskflow_net

  migrate:
    build: .
    container_name: taskflow_migrate
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      MIGRATION_INSIDE_DOCKER: 1
    env_file:
      - .env
    command: alembic upgrade head
    networks:
      - taskflow_net


  web:
    build: .
    container_name: taskflow_web
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    env_file:
      - .env
    expose:
      - "8000"
    volumes:
      - ./src:/fast_api/src
    networks:
      - taskflow_net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/task_flow/health" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/errors/:/etc/nginx/errors/:ro
    networks:
      - taskflow_net
    depends_on:
      - web

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  taskflow_net:
    name: taskflow_net
    driver: bridge